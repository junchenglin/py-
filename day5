1.元素类型
1.集合
1.1定义
  v1 = {22,33,"alex"}
  #无序的，无法通过索引取值
  #可变，可以添加和删除元素
  v1.add(55)
  print(v1) #(22,33,"alex",55)
  #不允许数据重复
  v1.add(22) #结果仍为原集合
  
  #定义空集合时需要用set()
  
  v1 = []
  v11 = list()
  
  v2 = ()
  v22 = tuple()
  
  v3 = set()
  
  v4 = {} #字典
  v44 =dict
  
1.2独有功能
1.2.1 增加
  data = set()
  data.add("alex")
  
 1.2.2删除
  data = {22,33,"alex"}
  data.discard("alex")
 
 1.2.3交集
  s1 = {"刘能","赵四","皮皮"}
  s2 = {"刘能","aaa","ads"}
  s4 = s1.intersection(s2)
  s3 = s1 & s2
  print(s3,s4)
  
 1.2.4并集
   s1 = {"刘能","赵四","皮皮"}
   s2 = {"刘能","aaa","ads"}
   s3 = s1| s2
   s4 =s1.union(s2)
   
  1.2.5差集
   s1 = {"刘能","赵四","皮皮"}
   s2 = {"刘能","aaa","ads"}
   s3 = s1 - s2 #s1中有 s2
   s4 = s1.difference(s2)
 
1.3公共功能
 1.3.1 减，即差集
 
 1.3.2交集，&
 
 1.3.3并集，|
 
 1.3.4长度
 v = {"aa","ff"}
 data = len(v)
 
 1.3.5for循环
 v = {"aa","ff"}
 for item in v
 
1.4转换
  int/list/tuple/dict 都可以转换为集合
  v1 = "武沛齐"
  v2 = set(v1)
  print(v2) # {"武","沛","齐"}
  
  v1 = [11,22,33,11,3,99,22]
  v2 = set(v1)
  print(v2) # {11,22,33,3,99}
  
  v1 = (11,22,3,11)
  v2 = set(v1)
  print(v2) # {11,22,3}
  提示：这其实也是去重的一个手段。

  data = {11,22,33,3,99}
  v1 = list(data) # [11,22,33,3,99]
  v2 = tuple(data) # (11,22,33,3,99)
  
1.5其他
  集合元素是将元素转换为哈希值，所以集合的元素必须为可哈希的值
  目前可哈希的数据类型：int、bool、str、tuple，而list、set是不可哈希的。
  总结：集合的元素只能是 int、bool、str、tuple 。（集合和列表不可哈希）
  
  转换成功
  v1 = [11,22,33,11,3,99,22]
  v2 = set(v1)
  print(v2) # {11,22,33,3,99}
  
  转换失败
  v1 = [11,22,["alex","eric"],33]
  v2 = set(v1) # 报错 
  print(v2) 

1.5.1查找速度快（存储原理）
  data = {11,22,33,3,99}
  if 11 in data :
    pass
 
1.5.2对比和嵌套
 {11,22(True,[11,22]),"ss"} #不正确 {}内所有值都应可哈希，列表不可哈希
  v1 = {True, 1}
  print(v1)  # {True} 都为1 取第一个

  v2 = {1, True}
  print(v2)  # {1}

  v3 = {0, False}
  print(v3)  # {0}

  v4 = {False, 0}
  print(v4)  # {False}
 
 
 
 
